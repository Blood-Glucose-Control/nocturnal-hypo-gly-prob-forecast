AutoEnsembleForecaster:
  forecasters:
    type: list

    # this is just an example. we can put whatever forecasters we want to combine here
    # the AutoEnsembleForecaster finds the optimal weights for each forecaster so we dont need to tune any parameters ourselves
    values: [
      ["AutoARIMA", {"start_p": 2, "max_p": 108, "start_q": 2, "max_q": 108, "seasonal": false, "n_jobs": -1}],
       ["ExponentialSmoothing", {}], # not sure about the format for this since AutoEnsembleForecaster expects a (str, forecaster) tuple for the forecasters parameter
       ["ThetaForecaster", {}],
       ["NaiveForecaster", {}],
       ["TinyTimeMixerForecaster", {}]
    ]
  method:
    type: list
    values: ["feature-importance", "inverse-variance"]
  test_size:
    type: list
    values: [0.2]

DartsXGBModel:
  lags:
    type: int
    range: [1, 24]
  output_chunk_length:
    type: int
    range: [1, 24]
  lags_past_covariates:
    type: int
    range: [0, 30]
  lags_future_covariates:
    type: int
    range: [0, 30]
  likelihood:
    type: list
    values: ["poisson", "quantile"]
  quantiles:
    type: list
    values: [95, 90, 75, 50, 25, 10, 5]
  multi_models:
    type: bool
