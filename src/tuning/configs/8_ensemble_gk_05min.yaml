AutoEnsembleForecaster:
  forecasters:
    type: list

    # this is just an example. we can put whatever forecasters we want to combine here
    # the AutoEnsembleForecaster finds the optimal weights for each forecaster so we dont need to tune any parameters ourselves
    values: [
      ["AutoARIMA", {}],
       ["ExponentialSmoothing", {}], # not sure about the format for this since AutoEnsembleForecaster expects a (str, forecaster) tuple for the forecasters parameter
       ["ThetaForecaster", {}]
    ]
  method:
    type: list
    values: ["feature-importance", "inverse-variance"]
  test_size:
    type: list
    values: [0.1, 0.15, 0.2, 0.25, 0.3]

DartsXGBModel:
  lags:
    type: int
    range: [1, 24]
  output_chunk_length:
    type: int
    range: [1, 24]
  lags_past_covariates:
    type: int
    range: [0, 30]
  lags_future_covariates:
    type: int
    range: [0, 30]
  likelihood:
    type: list
    values: ["poisson", "quantile"]
  quantiles:
    type: int
    range: [1,30]
  multi_models:
    type: bool
